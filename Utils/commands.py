# commands.py - –°–∏—Å—Ç–µ–º–∞ –∫–æ–º–∞–Ω–¥

import curses
from Battle.battle_logic import simulate_battle
from Battle.battle_logger import battle_logger
from Config.curses_config import BATTLE_DELAY
from Characters.char_utils import create_enemies

class CommandHandler:
    def __init__(self, players, enemies, stdscr=None):
        self.players = players
        self.enemies = enemies
        self.stdscr = stdscr
        self.input_str = ""
        self.commands = {
            'go': self.start_battle,
            'start': self.start_battle,
            'fight': self.start_battle,
            'help': self.show_help,
            'h': self.show_help,
            'clear': self.clear_log,
            'cls': self.clear_log,
            'exit': self.exit_game,
            'quit': self.exit_game,
            'q': self.exit_game
        }
    
    def process_input(self, key):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        if isinstance(key, str) and key.isprintable():
            self.input_str += key
            return None  # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤–≤–æ–¥
        elif key == curses.KEY_BACKSPACE or key == 127 or key == "\x7f":
            self.input_str = self.input_str[:-1]
            return None  # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤–≤–æ–¥
        elif key == "\n" or key == "\r":
            if self.input_str.strip():
                cmd = self.input_str.strip().lower()
                self.input_str = ""  # –û—á–∏—â–∞–µ–º –≤–≤–æ–¥
                return self.execute_command(cmd)
            else:
                self.input_str = ""  # –û—á–∏—â–∞–µ–º –ø—É—Å—Ç–æ–π –≤–≤–æ–¥
                return False  # –ù–µ –≤—ã—Ö–æ–¥–∏—Ç—å
        elif key == 27:  # ESC
            return True  # –í—ã—Ö–æ–¥
        elif key == 3:   # Ctrl+C
            return True  # –í—ã—Ö–æ–¥
        return False  # –ü—Ä–æ–¥–æ–ª–∂–∞—Ç—å
    
    def execute_command(self, command):
        """–í—ã–ø–æ–ª–Ω—è–µ—Ç –∫–æ–º–∞–Ω–¥—É"""
        cmd = command.strip().lower()
        
        if cmd in self.commands:
            return self.commands[cmd]()
        else:
            battle_logger.log_system_message(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: {command}")
            battle_logger.log_system_message("–í–≤–µ–¥–∏—Ç–µ 'help' –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥")
            return False  # –ù–µ –≤—ã—Ö–æ–¥–∏—Ç—å –∏–∑ –∏–≥—Ä—ã
    
    def start_battle(self):
        """–ù–∞—á–∏–Ω–∞–µ—Ç –±–æ–π"""
        try:
            self.enemies = create_enemies(self.players)
            result = simulate_battle(self.players, self.enemies)
            return False  # –ù–µ –≤—ã—Ö–æ–¥–∏—Ç—å –∏–∑ –∏–≥—Ä—ã
            
        except Exception as e:
            battle_logger.log_system_message(f"üí• –û—à–∏–±–∫–∞ –≤ –±–æ—é: {str(e)}")
            return False  # –ù–µ –≤—ã—Ö–æ–¥–∏—Ç—å –∏–∑ –∏–≥—Ä—ã
    
    def show_help(self):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–º–æ—â—å"""
        battle_logger.set_message_delay(0)
        battle_logger.log_system_message("üìñ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:")
        battle_logger.log_system_message("  go/start/fight - –Ω–∞—á–∞—Ç—å –±–æ–π")
        battle_logger.log_system_message("  help/h - –ø–æ–∫–∞–∑–∞—Ç—å –ø–æ–º–æ—â—å")
        battle_logger.log_system_message("  clear/cls - –æ—á–∏—Å—Ç–∏—Ç—å –ª–æ–≥")
        battle_logger.log_system_message("  exit/quit/q - –≤—ã–π—Ç–∏ –∏–∑ –∏–≥—Ä—ã")
        battle_logger.set_message_delay(BATTLE_DELAY)
        return False  # –ù–µ –≤—ã—Ö–æ–¥–∏—Ç—å –∏–∑ –∏–≥—Ä—ã
    
    def clear_log(self):
        """–û—á–∏—â–∞–µ—Ç –ª–æ–≥"""
        battle_logger.clear()
        battle_logger.log_system_message("üóëÔ∏è  –õ–æ–≥ –æ—á–∏—â–µ–Ω")
        return False  # –ù–µ –≤—ã—Ö–æ–¥–∏—Ç—å –∏–∑ –∏–≥—Ä—ã
    
    def exit_game(self):
        """–í—ã—Ö–æ–¥–∏—Ç –∏–∑ –∏–≥—Ä—ã"""
        battle_logger.log_system_message("üëã –î–æ –Ω–æ–≤—ã—Ö –≤—Å—Ç—Ä–µ—á!")
        return True  # –í—ã—Ö–æ–¥ –∏–∑ –∏–≥—Ä—ã
    
    def get_input(self):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–æ–∫—É –≤–≤–æ–¥–∞"""
        return self.input_str
    
    def get_available_commands(self):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥"""
        return list(self.commands.keys())

# –ì–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥ (–±—É–¥–µ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –≤ main)
command_handler = None